from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram import Router, F
from db import update_db
from db import get_count_not_ready_urls_for_user
from db import get_count_ready_urls_for_user
from db import get_list_urls_in_work_for_user
from db import get_list_ready_urls_for_user
from db import get_url_by_urlname
from db import report_by_link


client = Router()


#/start
@client.message(F.text == '/start')
async def start(message: Message):
    #–æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update_db(message.from_user.id, message.from_user.full_name, message.from_user.username)
    #–ø–æ–ª—É—á–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫ —Å–¥–µ–ª–∞–Ω–æ –∏ —Å–∫–æ–ª—å–∫–æ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    count_not_ready_urls = await get_count_not_ready_urls_for_user(message.from_user.id)
    count_ready_urls = await get_count_ready_urls_for_user(message.from_user.id)
    #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∞–≤—ã
    inline_keyboard = []
    inline_keyboard.append([InlineKeyboardButton(text=f'‚ö°–ù–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è({count_not_ready_urls})', callback_data='–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-0')])
    inline_keyboard.append([InlineKeyboardButton(text=f'‚úî–í—ã–ø–æ–ª–Ω–µ–Ω–æ({count_ready_urls})', callback_data='–í—ã–ø–æ–ª–Ω–µ–Ω–æ')])
    #—Å–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=keyboard)
    

#–í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é
@client.callback_query(F.data == "–ú–µ–Ω—é")
async def menu(callback: CallbackQuery):
    #–ø–æ–ª—É—á–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫ —Å–¥–µ–ª–∞–Ω–æ –∏ —Å–∫–æ–ª—å–∫–æ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    count_not_ready_urls = await get_count_not_ready_urls_for_user(callback.from_user.id)
    count_ready_urls = await get_count_ready_urls_for_user(callback.from_user.id)
    #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∞–≤—ã
    inline_keyboard = []
    inline_keyboard.append([InlineKeyboardButton(text=f'‚ö°–ù–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è({count_not_ready_urls})', callback_data='–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-0')])
    inline_keyboard.append([InlineKeyboardButton(text=f'‚úî–í—ã–ø–æ–ª–Ω–µ–Ω–æ({count_ready_urls})', callback_data='–í—ã–ø–æ–ª–Ω–µ–Ω–æ')])
    #—Å–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
    await callback.message.edit_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=keyboard)


#–°–°–´–õ–ö–ò –í –†–ê–ë–û–¢–ï-
@client.callback_query(F.data.startswith("–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-"))
async def urls_in_work(callback: CallbackQuery):
    #–æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update_db(callback.from_user.id, callback.from_user.full_name, callback.from_user.username)
    #–ø–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ
    list_urls_in_work = await get_list_urls_in_work_for_user(callback.from_user.id)
    count_urls_in_list = 10 #–Ω–∞ –∫–∞–∂–¥–æ–º –ª–∏—Å—Ç–µ –ø–æ count_urls_in_list —Å—Å—ã–ª–æ–∫
    #sheet - –Ω–æ–º–µ—Ä –ª–∏—Å—Ç–∞
    message_text = callback.data
    index = message_text.find("-")
    sheet = int(message_text[index+1:])
    #—Ñ–æ—Ä–º–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫–∏ –∏ —Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–¥–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    #–µ—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –µ—Å—Ç—å
    if len(list_urls_in_work) > 0:
        #–æ—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä–∞–±–æ—Ç–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º –ª–∏—Å—Ç–µ
        index_start = sheet * count_urls_in_list
        index_end = index_start + count_urls_in_list - 1
        #–µ—Å–ª–∏ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –ª–∏—Å—Ç–µ –º–µ–Ω—å—à–µ, —á–µ–º –≤–ª–∞–∑–∏—Ç –≤—Å–µ–≥–æ
        if len(list_urls_in_work)-1 < index_end:
            index_end = len(list_urls_in_work) - 1
        #—Ç–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
        message_text = f"–õ–∏—Å—Ç ‚Ññ{sheet+1}"
        #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∞–≤—ã
        inline_keyboard = []
        for index in range(index_start, index_end+1):
            inline_keyboard.append([InlineKeyboardButton(text=f'#{index+1} | {list_urls_in_work[index]}', callback_data=f'url:{list_urls_in_work[index]}')])
        #–∫–Ω–æ–ø–∫–∏ - –Ω–∞–∑–∞–¥ –∏ –≤–ø–µ—Ä—ë–¥ - –≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤
        inline_keyboard_for_movement = []
        if sheet>0:
            inline_keyboard_for_movement.append(InlineKeyboardButton(text='–ü—Ä–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞', callback_data=f'–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-{sheet-1}'))
        if len(list_urls_in_work)-1 > index_end:
            inline_keyboard_for_movement.append(InlineKeyboardButton(text='–°–ª–µ–¥. —Å—Ç—Ä–∞–Ω–∏—Ü–∞', callback_data=f'–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-{sheet+1}'))
        #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥ –∏ –≤–ø–µ—Ä—ë–¥ –≤ –æ–±—â—É—é –º–∞—Å—Å–∏–≤ –∫–Ω–æ–ø–æ–∫
        inline_keyboard.append(inline_keyboard_for_movement)
        #–¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥
        inline_keyboard.append([InlineKeyboardButton(text="–ú–µ–Ω—é", callback_data='–ú–µ–Ω—é')])
    #–µ—Å–ª–∏ —Ä–∞–±–æ—á–∏—Ö —Å—Å—ã–ª–æ–∫ –Ω–µ—Ç
    else:
        message_text = '‚ùóÔ∏è–ù–µ—Ç —Ä–∞–±–æ—á–∏—Ö —Å—Å—ã–ª–æ–∫'
        #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∞–≤—ã
        inline_keyboard = []
        count_not_ready_urls = await get_count_not_ready_urls_for_user(callback.from_user.id)
        count_ready_urls = await get_count_ready_urls_for_user(callback.from_user.id)
        inline_keyboard.append([InlineKeyboardButton(text=f'‚ö°–ù–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è({count_not_ready_urls})', callback_data='–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-0')])
        inline_keyboard.append([InlineKeyboardButton(text=f'‚úî–í—ã–ø–æ–ª–Ω–µ–Ω–æ({count_ready_urls})', callback_data='–í—ã–ø–æ–ª–Ω–µ–Ω–æ')])
    #—Å–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
    await callback.message.edit_text(message_text, reply_markup=keyboard)
    

#–í–´–ü–û–õ–ù–ï–ù–û
@client.callback_query(F.data.startswith("–í—ã–ø–æ–ª–Ω–µ–Ω–æ"))
async def ready_urls(callback: CallbackQuery):
    #—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å
    count_not_ready_urls = await get_count_not_ready_urls_for_user(callback.from_user.id)
    count_ready_urls = await get_count_ready_urls_for_user(callback.from_user.id)
    inline_keyboard = []
    inline_keyboard.append([InlineKeyboardButton(text=f'‚ö°–ù–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è({count_not_ready_urls})', callback_data='–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-0')])
    inline_keyboard.append([InlineKeyboardButton(text=f'‚úî–í—ã–ø–æ–ª–Ω–µ–Ω–æ({count_ready_urls})', callback_data='–í—ã–ø–æ–ª–Ω–µ–Ω–æ')])
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
    #–æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update_db(callback.from_user.id, callback.from_user.full_name, callback.from_user.username)
    #–ø–æ–ª—É—á–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
    list_ready_urls = await get_list_ready_urls_for_user(callback.from_user.id)  
    #–≥–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –∏–Ω–¥–µ—Å–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Å—ã–ª–æ–∫
    global_index = 0
    #–µ—Å–ª–∏ —Å—Å—ã–ª–∫–∏ –µ—Å—Ç—å
    #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å–∫—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å–æ –≤—Å–µ–º–∏ —Å—Å—ã–ª–∫–∞–º–∏
    if len(list_ready_urls) > 0:
        #—É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        try:
            await callback.message.delete()
        except:
            pass #—Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è(–±–æ–ª–µ–µ –¥–≤—É—Ö –¥–Ω–µ–π) –Ω–µ —É–¥–∞–ª—è—é—Ç—Å—è
        #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –±—É–¥—É—Ç –≤—ã–≤–µ–¥–µ–Ω—ã –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏
        await callback.message.answer("–û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏")
        #–ø–æ–∫–∞ –ø—Ä–æ—à–ª–∏ –Ω–µ –ø–æ –≤—Å–µ–º —Å—Å—ã–ª–∫–∞
        while global_index <= len(list_ready_urls) - 1: 
            #—Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
            message_text = ""
            #—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ 10 —Å—Å—ã–ª–æ–∫
            for _ in range(10):
                if global_index > len(list_ready_urls) - 1:
                    break
                #–ø–æ–ª—É—á–∞–µ–º url –ø–æ urlname
                url = await get_url_by_urlname(list_ready_urls[global_index])
                message_text += f"#{global_index+1} | {url}\n"
                global_index += 1
            #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.answer(message_text, disable_web_page_preview=True)
        #–æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=keyboard)
    #–µ—Å–ª–∏ –Ω–µ—Ç —Å—Å—ã–ª–æ–∫
    #—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ –Ω–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
    else:
         await callback.message.edit_text("‚ùóÔ∏è–ù–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Å—Å—ã–ª–æ–∫", reply_markup=keyboard)
    

#–í–∑—è—Ç—å—Å—è –≤ —Ä–∞–±–æ—Ç—É –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Å—Å—ã–ª–æ–∫
@client.callback_query(F.data.startswith("url"))
async def url_processing(callback: CallbackQuery):
    #–æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    await update_db(callback.from_user.id, callback.from_user.full_name, callback.from_user.username)
    #–ø–æ–ª—É—á–∞–µ–º –∏–º—è —Å—Å—ã–ª–∫–∏ –∏–∑-–ø–æ–¥ –∫–Ω–æ–ø–∫–∏
    urlname = callback.data[4:]
    #–ø–æ–ª—É—á–∞–µ–º url –ø–æ urlname
    url = await get_url_by_urlname(urlname)
    #—Ñ–æ—Ä–º–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    message_text = f"""–ü—Ä–æ–¥–æ–ª–∂–∞–µ–ºüî•

‚ùóÔ∏è–ë–ª–æ–∫–∏—Ä—É–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¶–ò–ü–°–û —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è—é—â—É—é –ø—Ä–æ—É–∫—Ä–∞–∏–Ω—Å–∫—É—é –ø—Ä–æ–ø–∞–≥–∞–Ω–¥—É, —Ñ–µ–π–∫–∏, –¥–∏—Å–∫—Ä–µ–¥–∏—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–ª–∞—Å—Ç–∏ –∏ –ú–û –†–§.

üìå–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:

1Ô∏è‚É£ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –ø–æ —Å—Å—ã–ª–∫–µ:
{url};

2Ô∏è‚É£ –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è";

3Ô∏è‚É£–í—ã–±–∏—Ä–∞–µ–º –Ω—É–∂–Ω—É—é –≥—Ä–∞—Ñ—É;

4Ô∏è‚É£–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å–≤–æ–±–æ–¥–Ω–æ–π —Ñ–æ—Ä–º–µ; 

üö©–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∂–∞–ª–æ–±—É

–ó–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ!

–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É - ‚ùóÔ∏è‚ùóÔ∏è‚ùóÔ∏è–æ—Ç—á–∏—Ç–∞—Ç—å—Å—è –±–µ–∑ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–Ø"""
    #–∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—ã–ø–æ–ª–µ–Ω–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
    keyboard = []
    keyboard.append([InlineKeyboardButton(text='–û—Ç—á–∏—Ç–∞—Ç—å—Å—è –æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏', callback_data=f'ready:{urlname}')])
    keyboard.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data='–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-0')])
    #—Å–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard)
    await callback.message.edit_text(message_text, reply_markup=keyboard, disable_web_page_preview=True)
    

#–æ—Ç—á–∏—Ç–∞—Ç—å—Å—è –æ –±–ª–æ–∫–∏—Ä–æ–≤–∫–µ —Å—Å—ã–ª–∫–∏
@client.callback_query(F.data.startswith("ready"))
async def ready_url(callback: CallbackQuery):
    #–ø–æ–ª—É—á–∞–µ–º –∏–º—è url —Å—Å—ã–ª–∫–∏
    urlname = callback.data[6:]
    #–æ–±–Ω–æ–≤–ª—è–µ–º –±–¥ - —Å—Å—ã–ª–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞
    await report_by_link(callback.from_user.id, urlname)
    #–ø–æ–ª—É—á–∞–µ–º —Å–∫–æ–ª—å–∫–æ —Å—Å—ã–ª–æ–∫ —Å–¥–µ–ª–∞–Ω–æ –∏ —Å–∫–æ–ª—å–∫–æ –Ω–µ —Å–¥–µ–ª–∞–Ω–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    count_not_ready_urls = await get_count_not_ready_urls_for_user(callback.from_user.id)
    count_ready_urls = await get_count_ready_urls_for_user(callback.from_user.id)
    #—Å–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–ª–∞–≤—ã
    inline_keyboard = []
    inline_keyboard.append([InlineKeyboardButton(text=f'‚ö°–ù–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è({count_not_ready_urls})', callback_data='–°—Å—ã–ª–∫–∏ –≤ —Ä–∞–±–æ—Ç–µ-0')])
    inline_keyboard.append([InlineKeyboardButton(text=f'‚úî–í—ã–ø–æ–ª–Ω–µ–Ω–æ({count_ready_urls})', callback_data='–í—ã–ø–æ–ª–Ω–µ–Ω–æ')])
    #—Å–æ–±–∏—Ä–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
    await callback.message.edit_text("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=keyboard)
    await callback.answer("–£—Å–ø–µ—à–Ω–æ! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –í—ã —Å –Ω–∞–º–∏ü•∞", show_alert=True)
    